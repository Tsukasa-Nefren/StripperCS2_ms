name: build
on:
  push:
    branches: ["**"]
    tags: ["v*"]
  pull_request:
jobs:
  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"
      - name: Publish Managed
        run: dotnet publish ./Managed/StripperCS2_ms.csproj -c Release -f net9.0 -o out_win
      - name: Configure CMake
        if: ${{ hashFiles('CMakeLists.txt') != '' }}
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64
      - name: Build Native
        if: ${{ hashFiles('CMakeLists.txt') != '' }}
        run: cmake --build build --config Release --target StripperCS2_ms_adapter
      - name: Stage module folder
        run: |
          New-Item -ItemType Directory -Force -Path artifacts/StripperCS2_ms | Out-Null
          Copy-Item out_win/StripperCS2_ms.dll artifacts/StripperCS2_ms/
          Copy-Item out_win/StripperCS2_ms.deps.json artifacts/StripperCS2_ms/
          if (Test-Path out_win/StripperCS2_ms.runtimeconfig.json) { Copy-Item out_win/StripperCS2_ms.runtimeconfig.json artifacts/StripperCS2_ms/ }
          if (Test-Path ./build/Release/StripperCS2_ms_adapter.dll) { Copy-Item ./build/Release/StripperCS2_ms_adapter.dll artifacts/StripperCS2_ms/ }
          elseif (Test-Path ./build/StripperCS2_ms_adapter.dll) { Copy-Item ./build/StripperCS2_ms_adapter.dll artifacts/StripperCS2_ms/ }
          if (Test-Path ./Gamedata/StripperCS2_ms.games.json) { New-Item -ItemType Directory -Force -Path artifacts/gamedata | Out-Null; Copy-Item ./Gamedata/StripperCS2_ms.games.json artifacts/gamedata/ }
      - uses: actions/upload-artifact@v4
        with:
          name: StripperCS2_ms-module-win64
          path: artifacts/**
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"
      - name: Publish Managed
        run: dotnet publish ./Managed/StripperCS2_ms.csproj -c Release -f net9.0 -o out_linux
      - name: Install build deps
        if: ${{ hashFiles('CMakeLists.txt') != '' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build build-essential
      - name: Configure CMake
        if: ${{ hashFiles('CMakeLists.txt') != '' }}
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Release
      - name: Build Native
        if: ${{ hashFiles('CMakeLists.txt') != '' }}
        run: cmake --build build --target StripperCS2_ms_adapter
      - name: Stage module folder
        run: |
          set -e
          mkdir -p artifacts/StripperCS2_ms
          cp out_linux/StripperCS2_ms.dll artifacts/StripperCS2_ms/
          cp out_linux/StripperCS2_ms.deps.json artifacts/StripperCS2_ms/
          [ -f out_linux/StripperCS2_ms.runtimeconfig.json ] && cp out_linux/StripperCS2_ms.runtimeconfig.json artifacts/StripperCS2_ms/ || true
          [ -f ./build/libStripperCS2_ms_adapter.so ] && cp ./build/libStripperCS2_ms_adapter.so artifacts/StripperCS2_ms/ || true
          [ -f ./Gamedata/StripperCS2_ms.games.json ] && mkdir -p artifacts/gamedata && cp ./Gamedata/StripperCS2_ms.games.json artifacts/gamedata/ || true
      - uses: actions/upload-artifact@v4
        with:
          name: StripperCS2_ms-module-linux64
          path: artifacts/**
